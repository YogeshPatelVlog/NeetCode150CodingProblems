class Solution {
    public boolean isValidSudoku(char[][] board) {
        int N = 9;
        HashSet<Character>[] rows = new HashSet[N];
        HashSet<Character>[] colms = new HashSet[N];
        HashSet<Character>[] boxex = new HashSet[N];
        for(int r = 0; r< N; r++){
            rows[r] = new HashSet<Character>();
            colms[r] = new HashSet<Character>();
            boxex[r] = new HashSet<Character>();
        }
        for(int r = 0; r<N; r++){
            for(int c = 0; c<N; c++){
                char val = board[r][c];
                if(val == '.'){
                    continue;
                }
                if(rows[r].contains(val)){
                    return false;
                }
                rows[r].add(val);

                if(colms[c].contains(val)){
                    return false;
                }
                colms[c].add(val);

                int idx = (r/3) * 3 + (c/3);
                if(boxex[idx].contains(val)){
                    return false;
                }
                boxex[idx].add(val);
            }
        }
        return true;
    } 
}
